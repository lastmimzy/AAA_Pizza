import random
from typing import Callable


def log(template: str) -> Callable:
    """–ü–∞—Ä–∞–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, –ø–∞—Ä–∞–º–µ—Ç—Ä —à–∞–±–ª–æ–Ω–∞:
    –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"""
    def outer_wrapper(func: Callable) -> Callable:
        """–ü—Ä–æ—Å—Ç–æ–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä"""
        def inner_wrapper(*args, **kwargs) -> str:
            """–í—ã–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫—É, –ø–æ–ª—É—á–µ–Ω–Ω—É—é –ø–æ—Å–ª–µ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏
            –∑–Ω–∞—á–µ–Ω–∏–π –≤ —à–∞–±–ª–æ–Ω –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞"""
            random_time = random.randint(0, 60)
            return(template.format(random_time))
        return inner_wrapper
    return outer_wrapper


@log("üçï –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ {}—Å!")
def bake():
    """–ì–æ—Ç–æ–≤–∏—Ç –ø–∏—Ü—Ü—É"""
    pass


@log("üö¥ –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ {}—Å!")
def delivery():
    """–î–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É"""
    pass


@log("üè† –ó–∞–±—Ä–∞–ª–∏ –∑–∞ {}—Å!")
def pickup():
    """–°–∞–º–æ–≤—ã–≤–æ–∑"""
    pass
